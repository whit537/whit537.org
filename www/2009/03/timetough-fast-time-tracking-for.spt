title = "Timetough: fast time tracking for FogBugz"
published = "2009-03-18T23:52:00.003-04:00"
updated = "2011-04-10T09:52:44.989-04:00"
[---]
[---] text/html
{% extends "base.html" %}
{% block content %}
<p style="border:1px solid black; border-top-width: 3px; background: #EEE; padding: 1em;"><b>Timetough</b>: <a target="_blank" href="http://static.whit537.org/2009/timetough.gif">Screenshot</a> | <a href="http://www.zetadev.com/svn/public/timetough/timetough.py" target="_blank">Download</a> (needs <a href="http://pypi.python.org/pypi/pytz/">pytz</a>)</p><p>Paul Graham has a little essay called <span class="Apple-style-span" style="font-style: italic;"><a href="http://www.paulgraham.com/13sentences.html">Startups in 13 Sentences</a></span>. Numbers 7 and 10 are my favorites:</p><p></p><blockquote><p>7. You make what you measure.</p><p>10. Avoid distractions.<br /></p><p></p></blockquote><p>Avoiding distractions is another way to say staying productive. If an entrepreneur's greatest asset is their own time, and one makes what one measures, then measuring your time should make you more productive with your time, right?</p><p>Well, that's the theory I'm testing. So I'm back to using <a href="http://www.fogcreek.com/FogBugz/">FogBugz</a>. It has nifty integrated time tracking and schedule estimation features. However, I find that a web interface is simply not fast enough for efficient time tracking. The clicking, the reading, the loading. Derailed. For fast time tracking, here is a text file format format I've come up with:</p><p></p><pre>03/17/2009<br />09:33   101 12:00<br />12:00   42  13:30</pre><p>The sparsity of the format really cuts down on mental friction. Here are some specific notes:</p><ul><li>Using the 24 hour clock is faster than using AM/PM.</li><li>I had to spend some time making sure my virtual machine's clock was syncing properly, and had the correct timezone configured.</li><li>I came up with some Vim macros to insert the date- and timestamps, so that part is really fast.</li><li>Putting the case number between the start and end times mirrors the order that I think of them in. Fetching the case number occupies the first 0.1 to 10 seconds of working on the new case. The FogBugz "Working on" widget doesn't start the clock until I've located the case number. It also gives me lots of additional clutter. Clutter == friction.</li><li>Dealing exclusively with case numbers means that my brain ends up hashing them. So for very frequently used tasks, fetching the case number is instantaneous.</li><li>Currently active tasks are open in a browser tab in a FogBugz-dedicated window. So in the second instance, fetching the case number takes a second or two.<br /></li><li>Third-tier tasks take 10 seconds or so to go searching for in FogBugz.</li><li>The field order also makes switching tasks really fast: Ctrl-T, Enter, Ctrl-T. This is crucial for reacting to phone calls, emails, and kids barging in the door. :^)<br /></li><li>I regularly need to tweak the timestamps, for example, when I forget to switch cases until five minutes into the new one. This is a big value of a text file over FogBugz's "Working on" feature. Slamming out a timestamp and then tweaking it is a very cheap operation in my system. The parallel in FogBugz is using the "Timesheet" feature. Click, click. Read, read. Load, load. Derailed.</li><li>In FogBugz, you can't record that you're working on a case without giving an estimate for the case. But estimating is really a task unto itself. You want to batch that work rather than trying to squeeze it in between other tasks.</li></ul><p>So that's my format. Now I need to get the information back into FogBugz, so I can use their <a href="http://www.fogcreek.com/FogBugz/LearnMore.html?section=PredictShipDates">Evidence-Based Scheduling</a> and other nifty abstractions. I wrote a program called <a href="http://www.zetadev.com/svn/public/timetough/timetough.py">timetough</a> for this purpose. It uses the FogBugz API to post entries from my text file timesheet back into FogBugz. It protects against conflicting work intervals (i.e., an already-posted timesheet), and it prompts you for confirmation when you are trying to post time to closed cases. It also starts off by prompting you to add or update estimates for all of the tasks on your timesheet: batched estimation, the way it should be.</p><p>After having worked more closely with FogBugz' time tracking, I do have some questions about its design. First, it's not designed for standing tasks, such as I'd like to have for administration chores. This shows up especially in that you can't bill time against cases that don't have estimates. Standing tasks by definition have no expectation of completion, so for the moment I am using 0.01 hours as a special-case estimate along with a completion priority of 7 (the lowest) to indicate a standing task.</p><p>Second, FogBugz is optimized for shipping software. It is not as well-suited to time-and-materials work: <strike>I can't find a report that simply tells me how much time I've spent on a project</strike> <b>Update:</b><i>Found it; see comment below</i>. The FogBugz API means that one should be able to make something work for these scenarios, but this is the sort of understanding it might be helpful to have up front when considering the system. These are also suggestions for future FogBugz development.</p><p>Thirdly, FogBugz imposes a stronger concept of "shipping" software than I'm used to for web apps. My experience to date has been that web software <span class="Apple-style-span" style="font-style: italic;">evolves</span> more than it <span class="Apple-style-span" style="font-style: italic;">ships</span>. However, while certainly not approaching the rigidity of "shipping" old desktop software, I think FogBugz' focus on delivering a product is probably good. It fits with the focus on productivity that I'm after here, especially as it involves teams of developers and not just a lone ranger. </p><p></p><p>So with that all said, here are a couple screenshots to whet your whistle. Here is a basic run of timetough:<br /></p><p><img src="http://static.whit537.org/2009/timetough.gif" alt="timetough" /></p><p>And here is what the same info looks like once inside FogBugz:</p><p><img src="http://static.whit537.org/2009/fogbugz-timesheet.gif" alt="Timesheet in FogBugz" /></p><p>Hrm ... looks like I under-estimated on Case 85. ;^)</p><p><br /></p><p><span class="Apple-style-span" style="font-weight: bold;">P.S.</span> The name is from this song:</p><p><object width="300" height="110"><param name="movie" value="http://media.imeem.com/m/FgpZHJQwKk/aus=false/"><param name="wmode" value="transparent"><embed src="http://media.imeem.com/m/FgpZHJQwKk/aus=false/" type="application/x-shockwave-flash" width="300" height="110" wmode="transparent"></embed></object></p><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-671172062783838767?l=blag.whit537.org' alt='' /></div>
{% endblock %}
