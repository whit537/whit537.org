title = "Simplates, biblical Greek on Google App Engine"
published = "2008-04-10T15:01:00.019-04:00"
updated = "2011-04-10T09:52:45.136-04:00"
[---]
[---] text/html
{% extends "base.html" %}
{% block content %}
I scored a preview account on <a href="http://appengine.google.com/">Google App Engine</a> (GAE). Before I say anything else, let me say  congratulations to the team at Google that pulled this off. THIS IS UNQUESTIONABLY REALLY FREAKING AWESOME. The rest of us can now write programs for The Google. In Python. WOW. Nothing I say below should detract from that baseline awesomeness.<br /><br />So after getting "Greetings, program!" to work, I looked at porting <a href="http://code.google.com/p/gheat/">gheat</a> from Aspen to GAE. Unfortunately, the Python library available doesn't include PIL, so that was a quick dead end. I'm sure they will add PIL and other common third-party C extensions eventually. And lest you think I'm disappointed, remember: I AM WRITING A PROGRAM TO BE RUN ON THE GOOGLE. AND I'VE GOT ALMOST THE ENTIRE FREAKING STANDARD LIBRARY.<br /><br />So I decided instead to port a text-based project, which I'm calling "Bibligon" (it was previously called Textus but that name is taken on Google; the error message indicates that app engine apps actually share a namespace with Google accounts). <a href="http://bibligon.appspot.com/">Bibligon</a> is a hack I did while taking a biblical Greek class last spring. It's a way to annotate a fixed text down to the character level. The original was written using <a href="http://www.zetadev.com/software/aspen/0.8/doc/html/api-handlers-simplates.html">Django simplates</a>, served by <a href="http://www.zetadev.com/software/aspen/">Aspen</a>. GAE bundles Django(!), and Bibligon is an app that would grow lots of data quickly if it were actually used, so it seems like a good fit.<br /><br />Porting Bibligon to GAE makes me appreciate all over again why I wrote <a href="http://www.zetadev.com/software/aspen/">Aspen</a> and Simplates in the first place. For example, GAE's filesystem layout is nasty. You've got scripts that depend on Python modules being in a certain location relative to them. You've got nested Python paths. You've got Python files and static files and template files and configuration files and framework files and user files all jumbled together willy-nilly. Why not use something like <a href="http://pypi.python.org/pypi/virtualenv">virtualenv</a> to keep it all straight? (Caveat emptor: I AM PORTING MY APPLICATION TO THE GOOGLE. THIS IS UNREMITTINGLY AWESOME.)<br /><br />I also found the development server annoying. A couple of issues were peculiar to my setup. I develop on FreeBSD from Windows via VMWare. Due to <a href="http://blag.whit537.org/2007/05/flaky-network-on-freebsd-62-under.html">a bug in VMWare</a>, the connection hangs every so often, and I have to restart the network interface on FreeBSD. With Aspen, I just refresh the page I am working on and it immediately clears the now-dead socket. GAE uses BaseHTTPServer, though, and I have to go kill and restart the server process before I can connect again. It's probably a socket timeout setting or something. Another quirk of this setup is that I can't just bind to localhost because I'm not hitting the server from localhost. I have to bind to the server's external address. Aspen does this by default if no address is specified, but not so BaseHTTPServer. Not a big deal, as there is a command-line switch. (AND DID I MENTION THAT I'M DEVELOPING APPS FOR THE GOOGLE? IN PYTHON?)<br /><br />A few other dev server warts are more general. Even though GAE supports WSGI, requests are more or less wrapped in CGI. This means that anything you print shows up in the browser, before the response headers. You have to use the logging module to see things in the console. That's not so bad because you really do want to use logging anyway to take advantage of the GAE dashboard's log browsing interface. But this also breaks PDB; <span style="font-family:courier new;">set_trace()</span> just gives you BDBQuit in the browser. Moreover, they decided to use cgitb to display tracebacks, which means you have to scroll through tons of undifferentiated purple to see the actual error, which is at the bottom of the page. I also have to hit F5 twice to reload a page, but this could be related to my setup. I haven't yet done all the digging I could on these issues, and besides that, I HAVE A LOCAL COPY OF THE GOOGLE RUNNING ON MY LOCAL MACHINE, LOCALLY SERVING THE APPLICATION I AM LOCALLY DEVELOPING FOR DEPLOYMENT ON THE GOOGLE.<br /><br />YAML was a good choice for configuration. It's not too dissimilar from <a href="http://www.zetadev.com/software/aspen/0.8/doc/html/handlers-conf.html">the handlers syntax</a> in Aspen, and it's a standard. I would like to see a published API for accessing this configuration from my programs, though. (NOTE: I AM CONFIGURING PROGRAMS TO RUN ON THE GOOGLE.)<br /><br />So my first impression? Google App Engine is kind of ugly. BUT THIS UGLINESS IS VASTLY OVERSHADOWED BY THE INCREDIBLE COOLNESS OF WHAT YOU ARE DOING&mdash;RUNNING PYTHON APPS ON THE GOOGLE&mdash;AND THE SHEER IMPRESSIVENESS THAT THEY PULLED THIS THING OFF AT ALL.<br /><br />As far as actual code goes, I did get Simplates working. Since GAE bundles Django, I just had to add a <span style="font-family:courier new;">main()</span> function to <a href="http://aspen.googlecode.com/svn/trunk/lib/python/aspen/handlers/simplates/django_.py">the Django simplates module</a> in order for it to be usable as a GAE  handler script. I also tweaked the subpackage so it can be used apart from the rest of Aspen. If you want to play with it, svn checkout <a href="http://aspen.googlecode.com/svn/trunk/lib/python/aspen/handlers/simplates/">the simplates subpackage</a> into your GAE project directory, and use 'simplates/django_.py' as your <a href="http://code.google.com/appengine/docs/configuringanapp.html#Script_Handlers">script handler</a>. You'll also have to wire up Django and use a couple names that are hardcoded for now. Use the source and let me know if you want some pointers. (NB: THE POINTERS WILL BE FOR LOADING AND RUNNING DJANGO SIMPLATES ON THE GOOGLE.)<br /><br />So with Simplates working, I'm ready to start on actually porting <a href="http://bibligon.appspot.com/">Bibligon</a>. The Django and GAE data models are similar, and in addition to getting static files and simplates working, I've got my first piece of data posted. I should be able to get the whole thing ported in about a day. But unfortunately today is not that day. April 15 is looming large over someone who hasn't entered anything into QuickBooks for over a year. :^(<br /><br />P.S. A QUICKBOOKS KILLER COULD POTENTIALLY BE WRITTEN AS AN APPLICATION RUNNING ON THE GOOGLE. YOU OR I COULD WRITE THIS APPLICATION, THE APPLICATION RUNNING ON THE GOOGLE, KILLING QUICKBOOKS.<br /><br />P.P.S. And of course, the corporate techno-beast tightens its stranglehold on civilization, but waddya want?<div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-5812044877177032570?l=blag.whit537.org' alt='' /></div>
{% endblock %}