
 application/xml
<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:georss='http://www.georss.org/georss' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-36506138</id><updated>2011-09-21T02:55:07.766-04:00</updated><title type='text'>Chad Whitacre</title><subtitle type='html'>&lt;b&gt;Homepage:&lt;/b&gt;
&lt;a href="http://www.whit537.org/"&gt;www.whit537.org&lt;/a&gt;
         
&lt;b&gt;Email:&lt;/b&gt;
&lt;a href="mailto:chad@zetaweb.com"&gt;chad@zetaweb.com&lt;/a&gt;</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://blag.whit537.org/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/-/python'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/search/label/python'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/-/python/-/python?start-index=26&amp;max-results=25'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>66</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-36506138.post-3545887181323374884</id><published>2011-08-28T03:02:00.014-04:00</published><updated>2011-08-28T14:56:33.257-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Aspen, Marching to a Different Drummer</title><content type='html'>&lt;p&gt;&lt;a href="http://mechanicalcat.net/richard"&gt;Richard Jones&lt;/a&gt; recently included &lt;a href="http://aspen.io/"&gt;Aspen&lt;/a&gt; in a Python web micro-framework shootout for &lt;a href="http://pycon-au.org/"&gt;PyCon AU&lt;/a&gt;. Video queued to the Aspen portion:&lt;/p&gt;&lt;div style="padding: 1em 0; text-align: center;"&gt;&lt;iframe width="400" height="325" src="http://www.youtube.com/embed/AYjPIMe0BhA#t=32m33s" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;Slides of the whole thing:&lt;br /&gt;&lt;/p&gt;&lt;div style="padding: 1em 0; text-align: center;"&gt;&lt;iframe frameborder="0" height="334" marginheight="0" marginwidth="0" scrolling="no" src="http://www.slideshare.net/slideshow/embed_code/8952006" width="400"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;p&gt;Out of ten contestants, Aspen comes in dead last! &lt;a href="http://bottlepy.org/docs/dev/"&gt;Bottle&lt;/a&gt;&amp;nbsp;wins. But if you read the notes at the bottom of the slides, there’s an interesting twist.&amp;nbsp;Richard begins his review of Aspen by noting that it has “[q]uite a different approach to things,” and concludes it by saying:&lt;/p&gt;&lt;blockquote&gt;I’ve given Aspen a rough time here because it’s not really suitable for my purposes, but I can see how it’d actually be really nice to develop a simple website with.&lt;/blockquote&gt;&lt;p&gt;That&amp;rsquo;s fair ... especially since he doesn't explicitly say that Aspen would &lt;i&gt;not&lt;/i&gt; be really nice for a complex website. ;-)&lt;br /&gt;&lt;/p&gt;&lt;p&gt;You see, Aspen isn’t just a variation on a known web framework style—MVC, decorator-driven, class-based. Aspen is a new style. Aspen digs deeper in order to provide &lt;a href="http://blip.tv/pyohio/aspen-a-next-generation-web-framework-5436552"&gt;simple, powerful, and clean web apps&lt;/a&gt;&amp;nbsp;that participate in the zen of the filesystem, of HTTP, and of Python—all at once. As a result, Aspen doesn’t fit current preconceived notions of what a web framework should look like. That’s how I interpret the results of this shoot-out. Aspen is simply marching to a different drummer, per Richard’s visual:&lt;br /&gt;&lt;img alt="Aspen is ... different." src="http://static.whit537.org/2011/different.jpg"&gt;&lt;/p&gt;&lt;p&gt;Maybe Aspen is the &lt;a href="http://www.thedailyshow.com/watch/mon-august-15-2011/indecision-2012---corn-polled-edition---ron-paul---the-top-tier"&gt;Ron Paul&lt;/a&gt; of Python web frameworks? :-)&lt;br /&gt;&lt;/p&gt;&lt;h3&gt;Replies to Specific Items&lt;/h3&gt;&lt;p&gt;The major constructive criticism I am hearing is that Aspen’s &lt;a href="http://aspen.io/"&gt;documentation&lt;/a&gt; is “&lt;i&gt;seriously&lt;/i&gt; thin,” which I half-accept. There’s a fair amount of information there, but I’m hearing from others as well that it’s not presented in an accessible way, and I can agree with that. Aspen’s documentation needs to be even better than normal precisely because it pushes the envelope. It&amp;rsquo;s not there yet.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;The other thing I’m hearing is that “some things are inexplicably hard.” Apart from difficulty with things like page breaks that are actually part of the zen of Aspen, I was able to identify six specific instances of inexplicable hardness encountered in the review. I attribute these to a mixture of documentation failures and missing API. Hopefully I’ve been able to partially remedy some of them, at least, in the 0.11.11 release.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;Redirects&lt;/b&gt; -&amp;nbsp;I’ve added a simple &lt;code&gt;request.redirect&lt;/code&gt; method to make redirects easier. It’s (thinly) &lt;a href="http://aspen.io/request/"&gt;documented&lt;/a&gt;. I hadn’t added it to date because what I really want to do is port the &lt;a href="http://cherrypy.org/browser/trunk/cherrypy/_cperror.py#L154"&gt;more robust algorithm from CherryPy&lt;/a&gt;, but this is a step in the right direction.&lt;/li&gt;&lt;li&gt;&lt;b&gt;HTML escaping&lt;/b&gt; -&amp;nbsp;Aspen's&amp;nbsp;&lt;a href="http://aspen.io/templating/"&gt;templating&lt;/a&gt;&amp;nbsp;documentation mentions the helper function for escaping HTML, but didn’t mention that escaping isn't the default until now. It looks like Tornado made escaping the default in 2.0, so I’ll look at upgrading that library.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Request&amp;nbsp;API&lt;/b&gt; - The&amp;nbsp;&lt;code&gt;&lt;a href="http://aspen.io/request/"&gt;request object&lt;/a&gt;&lt;/code&gt;&amp;nbsp;is an unstable API, but all of the interfaces used in Richard’s example are in fact mentioned in the documentation, including &lt;code&gt;request.body&lt;/code&gt;. I guess that just goes to show how inaccessible the documentation really is. :-(&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;span class="Apple-style-span" style="font-weight: normal;"&gt;&lt;div style="display: inline !important;"&gt;&lt;b&gt;Content-Type&lt;/b&gt; - The default &lt;code&gt;Content-Type&lt;/code&gt; is &lt;code&gt;text/plain&lt;/code&gt;, and this is configurable website-wide using the &lt;code&gt;default_mimetype&lt;/code&gt; key in &lt;code&gt;&lt;a href="http://aspen.io/aspen.conf/"&gt;aspen.conf&lt;/a&gt;&lt;/code&gt;. However, the right way to encode the &lt;code&gt;Content-Type&lt;/code&gt; for a specific resource in Aspen is via its file extension. In Richard’s example, the file should be named &lt;code&gt;edit.html&lt;/code&gt; instead of just &lt;code&gt;edit&lt;/code&gt;.&lt;/div&gt;&lt;/span&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;&lt;div style="display: inline !important;"&gt;Manual REST&lt;span class="Apple-style-span" style="font-weight: normal;"&gt; - In general, I consider branching based on request method to be flexible and clean. It’s no more manual than specially-naming methods, and the flow of control is easier to keep straight. However, the conditions themselves are a bit verbose, so I’ve added &lt;code&gt;request.GET&lt;/code&gt;, etc., so you can use those instead of &lt;code&gt;request.method == "GET"&lt;/code&gt;. This is (thinly) &lt;/span&gt;&lt;/div&gt;&lt;/b&gt;&lt;b&gt;&lt;div style="display: inline !important;"&gt;&lt;span class="Apple-style-span" style="font-weight: normal;"&gt;&lt;a href="http://aspen.io/request/"&gt;documented&lt;/a&gt;.&lt;/span&gt;&lt;/div&gt;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;WSGI&lt;/b&gt; - Aspen does in fact expose a WSGI callable, at &lt;code&gt;aspen.wsgi.website&lt;/code&gt;. The &lt;a href="http://aspen.io/deployment/"&gt;deployment&lt;/a&gt; docs identify Aspen as a WSGI application and show it used as such under &lt;code&gt;gunicorn&lt;/code&gt; and &lt;code&gt;spawning&lt;/code&gt;. I’ve gone back and tweaked that page to explicitly mention the location of Aspen’s WSGI callable.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;One last detail: Richard advises putting a script in your site root, but you shouldn&amp;rsquo;t do that because it will be accessible through the web. Things like that belong either up a level or in the &lt;code&gt;.aspen&lt;/code&gt; hidden directory, though honestly Aspen thinks of itself more as an app server than a web framework. It’s primarily designed to be run as an executable from the command line, and only secondarily to be imported as a library into a script of your own devising.&lt;/p&gt;&lt;p&gt;Thanks to Richard for putting Aspen to the test and providing valuable feedback!&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-3545887181323374884?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3545887181323374884'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3545887181323374884'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2011/08/aspen-marching-to-different-drummer.html' title='Aspen, Marching to a Different Drummer'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://img.youtube.com/vi/AYjPIMe0BhA/default.jpg' height='72' width='72'/></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-1773946366736564262</id><published>2011-08-01T06:18:00.008-04:00</published><updated>2011-08-01T09:38:00.384-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>In Conferences and Customer Service, Don't Forget the Humans</title><content type='html'>&lt;p&gt;Three things (among others) happened this past week:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Registration opened for &lt;a href="http://py.codeconf.com/"&gt;PyCodeConf&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;EJ's &lt;a href="http://ejroundtheworld.blogspot.com/2011/07/airbnb-nightmare-no-end-in-sight.html"&gt;Airbnb nightmare&lt;/a&gt; went viral.&lt;/li&gt;&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Let&amp;rsquo;s connect some dots.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;PyCodeConf is an exclusive, high-end conference put on by Github. It&amp;rsquo;s at a swanky hotel in Miami&amp;rsquo;s South Beach. Registration is $600, plus the $179/night (which is dirt cheap, considering). Local companies are talking about the &lt;a href="https://github.com/blog/893-pycodeconf-tickets-on-sale#comment-13183"&gt;roof-top parties&lt;/a&gt; they&amp;rsquo;re going to throw. Github is billing it as a meeting &amp;ldquo;with the thought leaders and visionaries that will drive the Python community over the next year.&amp;rdquo; Guido is noticeably absent. So are &lt;a href="https://twitter.com/#!/raymondh"&gt;Raymond&lt;/a&gt;, &lt;a href="http://stackoverflow.com/users/95810/alex-martelli"&gt;Alex&lt;/a&gt;, &lt;a href="http://nedbatchelder.com/"&gt;Ned&lt;/a&gt;, &lt;a href="http://jacobian.org/"&gt;Jacob&lt;/a&gt;, etc., etc., etc. &lt;a href="https://twitter.com/#!/ctitusbrown/status/95943889604718593"&gt;Titus&lt;/a&gt; and &lt;a href="https://twitter.com/#!/GrahamDumpleton/status/96051347929051136"&gt;Graham&lt;/a&gt; are actively confused. Interestingly, Jesse Noller is involved. He&amp;rsquo;s the chair of PyCon, which, if I&amp;rsquo;m not mistaken, is the actual meeting of thought leaders and visionaries that will drive the Python community over the next year.&lt;/p&gt;&lt;p&gt;I have no doubt that PyCodeConf will sell out as Github promises. And I have no doubt that the attendees will have a blast drinking on South Beach roof-tops. That actually sounds really fun. But I think Github has miscalculated the character of the Python community.&lt;/p&gt;&lt;p&gt;PyOhio is much more in keeping with the Python ethos. It&amp;rsquo;s free for attendees (thanks to the volunteer organizers and the corporate sponsors). It&amp;rsquo;s held in a nice, but not flashy, facility (the student union at Ohio State University). And it displays real diversity on the often-overlooked spectrum of coolness. You know who I want to go to conferences with? Yes, the people doing Cool and Interesting Things&amp;mdash;the Googlers and the Facebookies and the people with startup stars in their eyes and the people who are the startup stars. I want them there. But I also want the quirky dude who loves writing really bad Tkinter games with his kids and can say to an audience, with absolute unselfconscious genuineness, &amp;ldquo;I like helping people.&amp;rdquo; That shit is beautiful. I want that at my conference, and I love Python because it&amp;rsquo;s full of that.&lt;/p&gt;&lt;p&gt;In the &lt;a href="http://codeconf.com/#fine-print"&gt;fine print&lt;/a&gt; for CodeConf (the general conference that is the pattern for PyCodeConf), there is this reminder:&lt;/p&gt;&lt;blockquote&gt;While at GitHub Inc. events or related social networking opportunities, attendees should not engage in discriminatory or offensive speech or actions regarding gender, sexuality, race, or religion.&lt;/blockquote&gt;&lt;p&gt;They forgot coolness.&lt;/p&gt;&lt;p&gt;One more dot to connect. &lt;a href="http://www.airbnb.com/"&gt;Airbnb&lt;/a&gt; is a Cool and Interesting Thing. It&amp;rsquo;s a Y Combinator-backed startup with a billion dollar &lt;a href="http://techcrunch.com/2011/07/24/Airbnb-bags-112-million-in-series-b-from-andreessen-and-others/"&gt;valuation&lt;/a&gt;. Now news is breaking about people who were lulled into a false sense of security by Airbnb&amp;rsquo;s brand (with Craiglist, you &lt;i&gt;know&lt;/i&gt; to be careful): &lt;a href="http://ejroundtheworld.blogspot.com/2011/07/airbnb-nightmare-no-end-in-sight.html"&gt;EJ&lt;/a&gt; and &lt;a href="http://techcrunch.com/2011/07/31/another-airbnb-victim-tells-his-story-there-were-meth-pipes-everywhere/"&gt;Troy&lt;/a&gt; rented their apartments to derelicts who trashed and robbed them. Yes, the hosts could/should have been more careful. But Airbnb has whiffed on customer service in their follow-up, in a situation much more drastic than the Google customer service &lt;a href="http://www.twitlonger.com/show/bt5akp"&gt;hiccup&lt;/a&gt; from a couple weeks ago. It took a &lt;a href="https://twitter.com/#!/vicgundotra/status/94184809936601090"&gt;Hail Mary&lt;/a&gt; to Vic Gundotra, but Thomas Monopoly did get his &lt;a href="https://twitter.com/#!/thomasmonopoly/status/96333405423280128"&gt;account back&lt;/a&gt; in under a week. After a month, Airbnb is mostly &lt;a href="http://techcrunch.com/2011/07/27/on-safety-a-word-from-airbnb/"&gt;posturing&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The connection I want to make is that if we forget about humans in our rush to be &amp;ldquo;thought leaders and visionaries,&amp;rdquo; then we&amp;rsquo;ll build companies that also forget about humans. Customer service is expensive and hard. In the rush to do Cool and Interesting Things, it&amp;rsquo;s a tempting corner to cut. Let&amp;rsquo;s do better.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-1773946366736564262?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1773946366736564262'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1773946366736564262'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2011/08/in-conferences-and-customer-service.html' title='In Conferences and Customer Service, Don&apos;t Forget the Humans'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5886747859643135996</id><published>2011-06-23T22:09:00.005-04:00</published><updated>2011-06-23T22:19:11.818-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Mongs - Data Browser for MongoDB</title><content type='html'>&lt;p&gt;We use &lt;a href="http://www.mongodb.org/"&gt;MongoDB&lt;/a&gt; pretty heavily at &lt;a href="http://corp.yougov.com/"&gt;work&lt;/a&gt; (along with Postgres and an in-house db), but I haven't found a good data browser like you get in &lt;a href="http://couchdb.apache.org/screenshots.html"&gt;Futon&lt;/a&gt; for CouchDB. There's a &lt;a href="https://github.com/sbellity/futon4mongo"&gt;port&lt;/a&gt; of Futon to MongoDB, but the data models don't quite line up and I wanted something read-only and simple. I went ahead and wrote such a one in Python using the &lt;a href="http://aspen.io/"&gt;Aspen&lt;/a&gt; web framework. I'm calling it &lt;a href="http://www.whit537.org/mongs/"&gt;Mongs&lt;/a&gt;, after a local dairy. Check it out if you want a nice clean Python-based data browser for MongoDB.&lt;/p&gt;&lt;p&gt;&lt;img src="http://www.whit537.org/mongs/mongs.png" /&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-5886747859643135996?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5886747859643135996'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5886747859643135996'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2011/06/mongs-data-browser-for-mongodb.html' title='Mongs - Data Browser for MongoDB'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-1023912430547372428</id><published>2011-04-04T08:34:00.002-04:00</published><updated>2011-04-04T08:43:18.327-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Aspen webserver, now with real-time</title><content type='html'>&lt;p&gt;Greetings, Planets Python. I've started working on the &lt;a href="http://aspen.io/"&gt;Aspen webserver&lt;/a&gt; again, with a focus on the &lt;a href="http://aspen.io/simplates/"&gt;simplates development pattern&lt;/a&gt;. Under the hood I've started using the &lt;a href="http://www.dieselweb.org/"&gt;diesel non-blocking socket engine&lt;/a&gt;, which means that Aspen is ready for real-time. I'm currently releasing development snapshots in the 0.9 line towards a stable 1.0 release. If you're interested in an alternative development pattern and an accessible real-time story, &lt;a href="http://aspen.io/"&gt;check out Aspen&lt;/a&gt;.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-1023912430547372428?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1023912430547372428'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1023912430547372428'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2011/04/aspen-webserver-now-with-real-time.html' title='Aspen webserver, now with real-time'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-125775477975141518</id><published>2009-12-07T14:14:00.006-05:00</published><updated>2011-04-10T09:52:44.947-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>Two ways to visualize sorting algorithms</title><content type='html'>&lt;p&gt;I discovered David Martin's &lt;a href="http://www.sorting-algorithms.com/"&gt;Sorting Algorithm Animations&lt;/a&gt; yesterday. It's great! I've seen animations like this before, but I like how they're all in one place here and can be run synchronously. The drill down pages give helpful analysis of when each algorithm is a good choice, which the animations then drive home. For example, because it is an adaptive algorithm (i.e., "&lt;a href="http://en.wikipedia.org/wiki/Adaptive_sort"&gt;it takes advantage of existing order in its input&lt;/a&gt;"), insertion sort smokes the rest on nearly-ordered data; &lt;a href="http://en.wikipedia.org/wiki/Timsort"&gt;Python's timsort&lt;/a&gt; uses this to good advantage.&lt;/p&gt;&lt;p&gt;These animations &lt;a href="http://corte.si/posts/code/visualisingsorting/"&gt;have a detractor&lt;/a&gt;, it turns out, in Aldo Cortesi. I would point out, though, that Aldo is frustrated by their lack of information about the &lt;i&gt;internals&lt;/i&gt; of each algorithm. Point granted. However, I think they are helpful for comparing &lt;i&gt;across&lt;/i&gt; algorithms, as above. Aldo's visualizations are a great complement. Timsort, e.g., is a &lt;a href="http://bugs.python.org/file4451/timsort.txt"&gt;sophisticated algorithm&lt;/a&gt;, and Aldo's &lt;a href="http://corte.si/posts/code/timsort/"&gt;visualization helps unravel it&lt;/a&gt;.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-125775477975141518?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/125775477975141518'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/125775477975141518'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/12/two-ways-to-visualize-sorting.html' title='Two ways to visualize sorting algorithms'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5902374293217128546</id><published>2009-07-24T10:05:00.009-04:00</published><updated>2011-04-10T09:52:44.963-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gheat'/><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>Two new Gheat committers</title><content type='html'>&lt;p&gt;Gheat is &lt;a href="http://code.google.com/p/gheat/"&gt;a toolkit for heatmaps in Python&lt;/a&gt;. I &lt;a href="http://blag.whit537.org/2007/07/heatmap-for-google-maps.html"&gt;started&lt;/a&gt; the project two years ago, and &lt;a href="http://blag.whit537.org/2008/01/gheat-python-heatmap-for-google-maps.html"&gt;open-sourced&lt;/a&gt; it 18 months ago. Gheat has seen modest uptake since then, and today I'm happy to announce the first two committers to the project.&lt;/p&gt;&lt;p&gt;&lt;b&gt;David Zielezna&lt;/b&gt; is an Australian developer who is active in the security visualization community. He is using gheat to &lt;a href="http://www.confickerworkinggroup.org/wiki/pmwiki.php/ANY/InfectionDistribution"&gt;visualize the spread of the Conficker worm&lt;/a&gt; as part of the Microsoft-sponsored &lt;a href="http://www.confickerworkinggroup.org/"&gt;Conficker Working Group&lt;/a&gt;. He has also introduced gheat to the &lt;a href="http://www.honeynet.org.au/"&gt;Australian Honeynet Project&lt;/a&gt; for &lt;a href="http://www.honeynet.org.au/?q=node/41"&gt;tracking spam origins&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Joshua Gross&lt;/b&gt; is using gheat to map web page clicks as part of &lt;a href="http://vistrac.com/"&gt;an analytics product called VisTrac&lt;/a&gt;. VisTrac also provides form metrics, scroll metrics, and other features.&lt;/p&gt;&lt;p&gt;Thanks and welcome aboard, David and Joshua!&lt;/p&gt;&lt;p&gt;If you're also using gheat, I'd love to hear about it. If you're interested in heatmapping with Python, now is a great time to &lt;a href="http://code.google.com/p/gheat/"&gt;get involved with gheat&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-5902374293217128546?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5902374293217128546'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5902374293217128546'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/07/two-new-gheat-committers.html' title='Two new Gheat committers'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5074353093767918198</id><published>2009-05-28T09:33:00.006-04:00</published><updated>2011-04-10T09:52:44.973-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='django'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>$ django</title><content type='html'>&lt;p&gt;For one reason and another, I am trying to work more and more with stock Django, rather than wrangling Django into Aspen. One specific way this plays out is that I want to "sit" inside of a Django project directory while developing. I want to treat the Django project as top-level, not bury it inside of a &lt;code&gt;lib/python&lt;/code&gt; directory. That way, I am close to &lt;code&gt;settings.py&lt;/code&gt;, &lt;code&gt;manage.py&lt;/code&gt;, etc.&lt;/p&gt;&lt;p&gt;However, to my eye, this is ugly:&lt;/p&gt;&lt;pre&gt;$ python manage.py foo&lt;/pre&gt;&lt;p&gt;If I make &lt;code&gt;manage.py&lt;/code&gt; executable, then I get this:&lt;/p&gt;&lt;pre&gt;$ ./manage.py foo&lt;/pre&gt;&lt;p&gt;Aesthetically, I think that's worse. What I really want is:&lt;/p&gt;&lt;pre&gt;$ django foo&lt;/pre&gt;&lt;p&gt;Well that's easy enough. I just copied &lt;code&gt;manage.py&lt;/code&gt; to &lt;code&gt;~/bin&lt;/code&gt; and &lt;a href="http://static.whit537.org/2009/django"&gt;tweaked it a little bit&lt;/a&gt;. Now I can call &lt;code&gt;&lt;a href="http://static.whit537.org/2009/django"&gt;django&lt;/a&gt;&lt;/code&gt; on any directory that has a &lt;code&gt;settings.py&lt;/code&gt; in it. The amount of Django API that this script uses is limited enough that it should work across multiple versions, so I can have a globally-installed &lt;code&gt;&lt;a href="http://static.whit537.org/2009/django"&gt;django&lt;/a&gt;&lt;/code&gt; executable and (via, e.g., &lt;code&gt;virtualenv&lt;/code&gt;) use local versions of the &lt;code&gt;django&lt;/code&gt; libraries as needed per-project. Huzzah!&lt;/p&gt;&lt;p&gt;Now, if only Django would &lt;a href="http://code.djangoproject.com/ticket/10966"&gt;stop trying to treat my projects as Python modules ...&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-5074353093767918198?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5074353093767918198'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5074353093767918198'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/05/django.html' title='$ django'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-1826616581231206813</id><published>2009-05-13T16:08:00.004-04:00</published><updated>2011-04-10T09:52:44.975-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>Beehive heatmap</title><content type='html'>&lt;p&gt;A while ago the developer of &lt;a href="http://www.placesnap.com/"&gt;PlaceSnap&lt;/a&gt; appeared on the &lt;a href="http://code.google.com/p/gheat/"&gt;Gheat&lt;/a&gt; mailing list. It appears that they didn't end up going with Gheat, but that's ok because their &lt;a href="http://www.placesnap.com/SnapMap.asp#Geo=38.410558,-96.855468&amp;amp;Time=All&amp;amp;Zoom=4"&gt;"beehive" solution to visualizing lots of map data&lt;/a&gt; is pretty awesome.&lt;/p&gt;&lt;img src="http://static.whit537.org/2009/beehive.gif" alt="beehive map visualization" /&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;They just launched their iPhone app, which is currently free. It's easy to use and addresses a need (sharing iPhone photos) that I've felt at least a twinge of. I'll probably &lt;a href="http://www.placesnap.com/gallery.asp?User=5783453222555858"&gt;try it out&lt;/a&gt; for a while.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-1826616581231206813?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1826616581231206813'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/1826616581231206813'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/05/beehive-heatmap.html' title='Beehive heatmap'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-317796259223763404</id><published>2009-04-02T13:23:00.006-04:00</published><updated>2011-04-10T09:52:44.981-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>OMeGle</title><content type='html'>&lt;p&gt;This is great: &lt;a href="http://www.omegle.com/"&gt;chat with strangers&lt;/a&gt;!&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.omegle.com/"&gt;&lt;img style="border: 1px solid black;" src="http://static.whit537.org/2009/omegle.png" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The site's (18-year-old) creator is &lt;a href="http://omegler.blogspot.com/2009/03/welcome-to-omegle-blog.html"&gt;worried about trolls&lt;/a&gt;, but I don't think he should be. I think he thinks you're actually going to make friends here, but I don't see that happening at all. I love Omegle because it gives you that vertiginous Internet-y feeling from seeing all of humanity in a great big soup, but in real time.&lt;/p&gt;&lt;p&gt;There are so many patterns to be explored here. One interesting thing I've found so far is that chatting a lot with anonymous people makes you more forward in non-anonymous chats. I am being more bold with the people I'm working with, but without being defensive. That's what anonymity and the instant disconnect option trains you to be: bold but not defensive. Honest and not threatened. Nothing to lose. I like that.&lt;/p&gt;&lt;p&gt;Also, I've watched the user base double over the course of the past 7 hours.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;P.S. It's &lt;a href="http://www.digitalmediatraining.com/blog/design/tess-salalac/omegle-what-the-hell-are-you"&gt;written in Twisted&lt;/a&gt;.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-317796259223763404?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/317796259223763404'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/317796259223763404'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/04/omegle.html' title='OMeGle'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-671172062783838767</id><published>2009-03-18T23:52:00.003-04:00</published><updated>2011-04-10T09:52:44.989-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>Timetough: fast time tracking for FogBugz</title><content type='html'>&lt;p style="border:1px solid black; border-top-width: 3px; background: #EEE; padding: 1em;"&gt;&lt;b&gt;Timetough&lt;/b&gt;: &lt;a target="_blank" href="http://static.whit537.org/2009/timetough.gif"&gt;Screenshot&lt;/a&gt; | &lt;a href="http://www.zetadev.com/svn/public/timetough/timetough.py" target="_blank"&gt;Download&lt;/a&gt; (needs &lt;a href="http://pypi.python.org/pypi/pytz/"&gt;pytz&lt;/a&gt;)&lt;/p&gt;&lt;p&gt;Paul Graham has a little essay called &lt;span class="Apple-style-span" style="font-style: italic;"&gt;&lt;a href="http://www.paulgraham.com/13sentences.html"&gt;Startups in 13 Sentences&lt;/a&gt;&lt;/span&gt;. Numbers 7 and 10 are my favorites:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;7. You make what you measure.&lt;/p&gt;&lt;p&gt;10. Avoid distractions.&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Avoiding distractions is another way to say staying productive. If an entrepreneur's greatest asset is their own time, and one makes what one measures, then measuring your time should make you more productive with your time, right?&lt;/p&gt;&lt;p&gt;Well, that's the theory I'm testing. So I'm back to using &lt;a href="http://www.fogcreek.com/FogBugz/"&gt;FogBugz&lt;/a&gt;. It has nifty integrated time tracking and schedule estimation features. However, I find that a web interface is simply not fast enough for efficient time tracking. The clicking, the reading, the loading. Derailed. For fast time tracking, here is a text file format format I've come up with:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;pre&gt;03/17/2009&lt;br /&gt;09:33   101 12:00&lt;br /&gt;12:00   42  13:30&lt;/pre&gt;&lt;p&gt;The sparsity of the format really cuts down on mental friction. Here are some specific notes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Using the 24 hour clock is faster than using AM/PM.&lt;/li&gt;&lt;li&gt;I had to spend some time making sure my virtual machine's clock was syncing properly, and had the correct timezone configured.&lt;/li&gt;&lt;li&gt;I came up with some Vim macros to insert the date- and timestamps, so that part is really fast.&lt;/li&gt;&lt;li&gt;Putting the case number between the start and end times mirrors the order that I think of them in. Fetching the case number occupies the first 0.1 to 10 seconds of working on the new case. The FogBugz "Working on" widget doesn't start the clock until I've located the case number. It also gives me lots of additional clutter. Clutter == friction.&lt;/li&gt;&lt;li&gt;Dealing exclusively with case numbers means that my brain ends up hashing them. So for very frequently used tasks, fetching the case number is instantaneous.&lt;/li&gt;&lt;li&gt;Currently active tasks are open in a browser tab in a FogBugz-dedicated window. So in the second instance, fetching the case number takes a second or two.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Third-tier tasks take 10 seconds or so to go searching for in FogBugz.&lt;/li&gt;&lt;li&gt;The field order also makes switching tasks really fast: Ctrl-T, Enter, Ctrl-T. This is crucial for reacting to phone calls, emails, and kids barging in the door. :^)&lt;br /&gt;&lt;/li&gt;&lt;li&gt;I regularly need to tweak the timestamps, for example, when I forget to switch cases until five minutes into the new one. This is a big value of a text file over FogBugz's "Working on" feature. Slamming out a timestamp and then tweaking it is a very cheap operation in my system. The parallel in FogBugz is using the "Timesheet" feature. Click, click. Read, read. Load, load. Derailed.&lt;/li&gt;&lt;li&gt;In FogBugz, you can't record that you're working on a case without giving an estimate for the case. But estimating is really a task unto itself. You want to batch that work rather than trying to squeeze it in between other tasks.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;So that's my format. Now I need to get the information back into FogBugz, so I can use their &lt;a href="http://www.fogcreek.com/FogBugz/LearnMore.html?section=PredictShipDates"&gt;Evidence-Based Scheduling&lt;/a&gt; and other nifty abstractions. I wrote a program called &lt;a href="http://www.zetadev.com/svn/public/timetough/timetough.py"&gt;timetough&lt;/a&gt; for this purpose. It uses the FogBugz API to post entries from my text file timesheet back into FogBugz. It protects against conflicting work intervals (i.e., an already-posted timesheet), and it prompts you for confirmation when you are trying to post time to closed cases. It also starts off by prompting you to add or update estimates for all of the tasks on your timesheet: batched estimation, the way it should be.&lt;/p&gt;&lt;p&gt;After having worked more closely with FogBugz' time tracking, I do have some questions about its design. First, it's not designed for standing tasks, such as I'd like to have for administration chores. This shows up especially in that you can't bill time against cases that don't have estimates. Standing tasks by definition have no expectation of completion, so for the moment I am using 0.01 hours as a special-case estimate along with a completion priority of 7 (the lowest) to indicate a standing task.&lt;/p&gt;&lt;p&gt;Second, FogBugz is optimized for shipping software. It is not as well-suited to time-and-materials work: &lt;strike&gt;I can't find a report that simply tells me how much time I've spent on a project&lt;/strike&gt; &lt;b&gt;Update:&lt;/b&gt; &lt;i&gt;Found it; see comment below&lt;/i&gt;. The FogBugz API means that one should be able to make something work for these scenarios, but this is the sort of understanding it might be helpful to have up front when considering the system. These are also suggestions for future FogBugz development.&lt;/p&gt;&lt;p&gt;Thirdly, FogBugz imposes a stronger concept of "shipping" software than I'm used to for web apps. My experience to date has been that web software &lt;span class="Apple-style-span" style="font-style: italic;"&gt;evolves&lt;/span&gt; more than it &lt;span class="Apple-style-span" style="font-style: italic;"&gt;ships&lt;/span&gt;. However, while certainly not approaching the rigidity of "shipping" old desktop software, I think FogBugz' focus on delivering a product is probably good. It fits with the focus on productivity that I'm after here, especially as it involves teams of developers and not just a lone ranger. &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;So with that all said, here are a couple screenshots to whet your whistle. Here is a basic run of timetough:&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://static.whit537.org/2009/timetough.gif" alt="timetough" /&gt;&lt;/p&gt;&lt;p&gt;And here is what the same info looks like once inside FogBugz:&lt;/p&gt;&lt;p&gt;&lt;img src="http://static.whit537.org/2009/fogbugz-timesheet.gif" alt="Timesheet in FogBugz" /&gt;&lt;/p&gt;&lt;p&gt;Hrm ... looks like I under-estimated on Case 85. ;^)&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;P.S.&lt;/span&gt; The name is from this song:&lt;/p&gt;&lt;p&gt;&lt;object width="300" height="110"&gt;&lt;param name="movie" value="http://media.imeem.com/m/FgpZHJQwKk/aus=false/"&gt;&lt;param name="wmode" value="transparent"&gt;&lt;embed src="http://media.imeem.com/m/FgpZHJQwKk/aus=false/" type="application/x-shockwave-flash" width="300" height="110" wmode="transparent"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-671172062783838767?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/671172062783838767'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/671172062783838767'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/03/timetough-fast-time-tracking-for.html' title='Timetough: fast time tracking for FogBugz'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-4071792155038104454</id><published>2009-02-13T11:12:00.002-05:00</published><updated>2011-04-10T09:52:44.999-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>Momentous event in unix time-continuum</title><content type='html'>&lt;p&gt;Received in email:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Unix time is measured in seconds since January 1, 1970 00:00 UT.&lt;/p&gt;&lt;p&gt;This afternoon, Friday, Feb 13, 2009 at 23:31:30 GMT or 5:31:30 PM unix time will be 1234567890.&lt;/p&gt;&lt;p&gt;For those who'd like to relish the moment, type "date +%s" at any unix prompt as the moment approaches and passes.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Here's &lt;a href="http://static.whit537.org/2009/moment.py"&gt;a little python script&lt;/a&gt; that you can use to commemorate the occassion (note the &lt;a href="http://blag.whit537.org/2008/11/use-for-carriage-return.html"&gt;use of the carriage return&lt;/a&gt; :^).&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-4071792155038104454?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4071792155038104454'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4071792155038104454'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/02/momentous-event-in-unix-time-continuum.html' title='Momentous event in unix time-continuum'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-3418187662594041721</id><published>2009-02-06T21:32:00.003-05:00</published><updated>2011-04-10T09:52:45.003-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><category scheme='http://www.blogger.com/atom/ns#' term='hacking'/><title type='text'>Integrating Trac and Mailman</title><content type='html'>&lt;p&gt;A year or so ago I created a project on Google Code called &lt;a href="http://code.google.com/p/tracman/"&gt;Tracman&lt;/a&gt;, which aime&lt;span&gt;&lt;span&gt;d "to implement a Trac plugin that gives you robust threaded discussion (via web and email), with Mailman under the hood." The project never went anywhere, but today Tom Cowin inquired about it, and so I've handed it off to him.&lt;/span&gt;&lt;/span&gt;&lt;span class="Apple-style-span" style="font-family: arial; font-size: 13px; "&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;If anyone is interested in getting this project off the ground, head on over and &lt;a href="http://code.google.com/p/tracman/"&gt;give Tom a hand&lt;/a&gt;.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-3418187662594041721?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3418187662594041721'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3418187662594041721'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/02/integrating-trac-and-mailman.html' title='Integrating Trac and Mailman'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-6618993881435740364</id><published>2009-01-14T22:31:00.011-05:00</published><updated>2011-04-10T09:52:45.010-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>BLAS, LAPACK, ATLAS ... and Sage</title><content type='html'>&lt;p&gt;Here's what I think I know so far:&lt;a href="http://www.netlib.org/blas/"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.netlib.org/blas/"&gt;BLAS&lt;/a&gt; is a linear algebra library specification. You want to build a BLAS implementation that is optimized for your architecture.&lt;a href="http://www.netlib.org/lapack/"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.netlib.org/lapack/"&gt;LAPACK&lt;/a&gt; is a huge linear algebra library on top of BLAS, with Fortran and C APIs.&lt;/li&gt;&lt;li&gt;&lt;a href="http://math-atlas.sourceforge.net/"&gt;ATLAS&lt;/a&gt; is an automatically tuned BLAS with C and Fortran APIs, and optimized C and Fortran APIs for a subset of LAPACK as well. You can optionally build it with LAPACK itself to include the remainder of its (unoptimized) Fortran API.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.sagemath.org/"&gt;Sage&lt;/a&gt; is the open source &lt;a href="http://www.mathworks.com/products/matlab/"&gt;Matlab&lt;/a&gt;. It takes all of the above, along with scores of &lt;a href="http://www.sagemath.org/links-components.html"&gt;other packages&lt;/a&gt; and their dependencies (including &lt;a href="http://numpy.scipy.org/"&gt;NumPy&lt;/a&gt;/&lt;a href="http://www.scipy.org/"&gt;SciPy&lt;/a&gt;), and glues them all together with Python behind a user-friendly CLI and GUI. And their website navigation slider is great. And installation, which is fully automated, takes a long time ...&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-6618993881435740364?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/6618993881435740364'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/6618993881435740364'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/01/blas-lapack-atlas-and-sage.html' title='BLAS, LAPACK, ATLAS ... and Sage'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-4482715759608122646</id><published>2009-01-10T20:50:00.030-05:00</published><updated>2011-04-10T09:52:45.013-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Installing Zope 2.7 on Fedora 8</title><content type='html'>&lt;p&gt;The short story is that you need to install &lt;code&gt;g++&lt;/code&gt; on Fedora 8 before you can install Zope 2.7.&lt;/p&gt;&lt;p&gt;The long story starts with Zope 2.7 wanting Python 2.3, and not working out of the box with Python 2.5 or greater. You can force the install with Python 2.5 by passing &lt;code&gt;--with-python=/path/to/python2.5 &lt;/code&gt;to Zope's &lt;code&gt;configure&lt;/code&gt;, but then you get this error on startup:&lt;br /&gt;&lt;/p&gt;&lt;pre&gt;$ bin/zopectl start&lt;br /&gt;Traceback (most recent call last):&lt;br /&gt;[...]&lt;br /&gt;AttributeError: 'wrapper_descriptor' object has no attribute 'im_func'&lt;br /&gt;$&lt;/pre&gt;&lt;p&gt;At this point you can either fix Zope 2.7, or just install Python 2.3. No-brainer, right? Well, it turns out that Python 2.3 comes with &lt;a href="http://www.python.org/download/releases/2.3.7/"&gt;this warning&lt;/a&gt;:&lt;/p&gt;&lt;blockquote&gt;[T]his release may fail to build on current operating systems [...]. [Y]ou might have to come up with work-arounds.&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Python 2.4, which Zope 2.7 can also use, has &lt;a href="http://www.python.org/download/releases/2.4.6/"&gt;a parallel warning&lt;/a&gt;. And I am here today because, verily, Fedora 8 falleth under these maledictions. Specifically, when you run &lt;code&gt;configure&lt;/code&gt; for Python 2.3 on Fedora 8, you get this output:&lt;/p&gt;&lt;pre&gt;$ ./configure&lt;br /&gt;checking MACHDEP... linux2&lt;br /&gt;checking EXTRAPLATDIR...&lt;br /&gt;checking for --without-gcc... no&lt;br /&gt;checking for --with-cxx=&lt;compiler&gt;... no&lt;br /&gt;checking for c++... no&lt;br /&gt;checking for g++... no&lt;br /&gt;checking for gcc... gcc&lt;br /&gt;checking for C++ compiler default output file name... configure: error: C++ compiler cannot create executables&lt;br /&gt;See `config.log' for more details.&lt;br /&gt;$&lt;/compiler&gt;&lt;/pre&gt;&lt;p&gt;And here is what &lt;code&gt;config.log&lt;/code&gt; has to say:&lt;/p&gt;&lt;pre&gt;configure:1753: checking for C++ compiler default output file name&lt;br /&gt;configure:1756: gcc    conftest.cc  &gt;&amp;amp;5&lt;br /&gt;gcc: error trying to exec 'cc1plus': execvp: No such file or directory&lt;br /&gt;configure:1759: $? = 1&lt;br /&gt;configure: failed program was:&lt;br /&gt;| /* confdefs.h.  */&lt;br /&gt;|&lt;br /&gt;| #define _GNU_SOURCE 1&lt;br /&gt;| #define _NETBSD_SOURCE 1&lt;br /&gt;| #define __BSD_VISIBLE 1&lt;br /&gt;| #define _BSD_TYPES 1&lt;br /&gt;| #define _XOPEN_SOURCE 600&lt;br /&gt;| #define _XOPEN_SOURCE_EXTENDED 1&lt;br /&gt;| #define _POSIX_C_SOURCE 200112L&lt;br /&gt;| /* end confdefs.h.  */&lt;br /&gt;|&lt;br /&gt;| int&lt;br /&gt;| main ()&lt;br /&gt;| {&lt;br /&gt;|&lt;br /&gt;|   ;&lt;br /&gt;|   return 0;&lt;br /&gt;| }&lt;br /&gt;configure:1798: error: C++ compiler cannot create executables&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Time, then, for a work-around (since fixing this can't possibly be more work than fixing Zope 2.7). Based on this line:&lt;/p&gt;&lt;pre&gt;gcc: error trying to exec 'cc1plus': execvp: No such file or directory&lt;/pre&gt;&lt;p&gt;I went on a wild goose chase for &lt;code&gt;cc1plus&lt;/code&gt;. I ended up actually &lt;code&gt;svn checkout&lt;/code&gt;-ing a couple different versions of GCC to track it down. (GCC, it turns out, is a truly monstrous codebase.) From what I can tell, it is the "actual" C++ compiler that a &lt;code&gt;gcc&lt;/code&gt; front-end hands off to when it hits C++ code (I could be wrong). I found it on my local machine but not on the Fedora 8 server. Anyway, the Internet's advice was simply to install &lt;code&gt;g++&lt;/code&gt;. So, not fully understanding the relationship between &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;g++&lt;/code&gt;, and &lt;code&gt;cc1plus&lt;/code&gt;, that's more or less what I did: a full, sandboxed &lt;a href="http://gcc.gnu.org/releases.html"&gt;install of GCC from source&lt;/a&gt;. Then I configured Python 2.3 &lt;code&gt;--with-cxx=$MYGXX&lt;/code&gt;, and it worked all peachy.&lt;/p&gt;&lt;p&gt;I ended up installing GCC 3.4.6 because that's the version I have locally and it works. Later versions may very well work, and you could probably get a yum-packaged version to work too (if you're comfortable with package managers).&lt;/p&gt;&lt;p&gt;I did try telling Python's configure that &lt;code&gt;/usr/bin/gcc&lt;/code&gt; was the C++ compiler. This fooled &lt;code&gt;configure&lt;/code&gt; but then I simply hit the same &lt;code&gt;cc1plus&lt;/code&gt; error in &lt;code&gt;make&lt;/code&gt;. Upon reflection, this attempt sounds like a bit of a WTF. However, the &lt;code&gt;gcc&lt;/code&gt; man page made it sound like this might in fact be true ("&lt;code&gt;gcc&lt;/code&gt; - &lt;i&gt;GNU project C and C++ compiler&lt;/i&gt;"), and I had/have a hard time believing that Fedora 8 doesn't come bundled with a C++ compiler. &lt;/p&gt;&lt;p&gt;Anyway, my tentative conclusion is that Fedora 8 indeed does &lt;span class="Apple-style-span" style="font-style: italic;"&gt;not&lt;/span&gt; have a C++ compiler, and you need to install one before you can build Python 2.3 on that platform. I don't know why Python versions 2.5 and later install cleanly, except that maybe the need for the C++ compiler was removed (since Python is written in C anyway; though is there a C++ API that you would need &lt;code&gt;g++&lt;/code&gt; for?). I haven't made it to the bottom of this, in other words, but I've gone as far as I have time and need for at this point.&lt;br /&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-4482715759608122646?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4482715759608122646'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4482715759608122646'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2009/01/installing-zope-27-on-fedora-8.html' title='Installing Zope 2.7 on Fedora 8'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-7954121988610607010</id><published>2008-12-05T14:42:00.006-05:00</published><updated>2011-04-10T09:52:45.037-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Why is Python 3.0 important?</title><content type='html'>&lt;div&gt;I had a friend ask me why Python 3.0 is so important. I replied that I was most excited about the new string and byte objects, and the reorganized standard library. Float division by default will be nice too. However, I think Python 3.0's importance is bigger than the immediate pain points it addresses, possibly much bigger.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Does anyone remember in Dallas a couple years ago when &lt;a href="http://us.pycon.org/TX2007/Keynotes"&gt;Robert Lefkowitz gave the keynote&lt;/a&gt;? I have to confess that I listened from the hall, but the idea I remember is that we are developing a canon of software just as we have a canon of world literature. He asked: what programs should be part of the canon?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now I'm going to be grand. Everyone have their grain of salt? Python 3.0 is not a release for today, it's a release for the ages. Python will now be known as one of the best pieces of software in world history. Python 2 is great; Python 3 is masterful.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;On the same day as Python 3.0 was released, there was a &lt;a href="http://www.reddit.com/r/programming/comments/7h3pa/perl_5_is_dying/"&gt;minor splash&lt;/a&gt; that &lt;a href="http://use.perl.org/~Ovid/journal/38010?from=rss"&gt;Perl is dying&lt;/a&gt;—&lt;a href="http://www.perlmonks.com/?node_id=561229"&gt;still&lt;/a&gt;. Perhaps Python is to William Shakespeare as Perl is to John Fletcher. Who?&lt;/div&gt;&lt;span&gt;&lt;span&gt;&lt;blockquote&gt;[&lt;a href="http://en.wikipedia.org/wiki/John_Fletcher_(playwright)"&gt;Fletcher&lt;/a&gt;] was among the most prolific and influential dramatists of his day; both during his lifetime and in the early Restoration, his fame rivaled Shakespeare's.&lt;/blockquote&gt;It's interesting that while Shakespeare's authorship of his plays is pretty well established, Guido clearly shares the spotlight with a whole community. It's also interesting how a well-written program functions as the basis for systems much more directly than a well-written corpus of plays (I think that's the sort of thing Lefkowitz went on to talk about). It's also the case that the world changes much faster now than in Shakespeare's day. How long before Python starts to feel more like Euripides than Shakespeare?&lt;/span&gt;&lt;/span&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-7954121988610607010?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/7954121988610607010/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=7954121988610607010' title='3 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/7954121988610607010'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/7954121988610607010'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/12/why-is-python-30-important.html' title='Why is Python 3.0 important?'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>3</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-4046727312172192141</id><published>2008-12-04T11:12:00.001-05:00</published><updated>2011-04-10T09:52:45.039-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Congratulations, Python!</title><content type='html'>Congratulations, Python! &lt;a href="http://python.org/download/releases/3.0/"&gt;It's the year 3000&lt;/a&gt;!&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-4046727312172192141?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/4046727312172192141/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=4046727312172192141' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4046727312172192141'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/4046727312172192141'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/12/congratulations-python.html' title='Congratulations, Python!'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-9066929495046590635</id><published>2008-12-01T10:51:00.005-05:00</published><updated>2011-04-10T09:52:45.042-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Job change</title><content type='html'>I'm leaving the &lt;a href="http://www.acn-us.org/"&gt;Anglican Communion Network&lt;/a&gt;; my last day is December 31st. In January I plan to start as a contract programmer with &lt;a href="http://www.artlogic.com/"&gt;Art &amp;amp; Logic&lt;/a&gt;.&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-9066929495046590635?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/9066929495046590635/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=9066929495046590635' title='5 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/9066929495046590635'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/9066929495046590635'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/12/job-change.html' title='Job change'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-3590371759556102549</id><published>2008-11-24T14:16:00.006-05:00</published><updated>2011-04-10T09:52:45.044-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>A use for the carriage return</title><content type='html'>&lt;p&gt;I just found out what the carriage return character, \r, is good for. A friend was asking for help on a command-line program: he wanted to update a progress indicator. This is like you get when downloading something with &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;wget&lt;/code&gt; or &lt;code&gt;fetch&lt;/code&gt;. So I opened up /usr/src/usr.bin/fetch/fetch.c, expecting to find some low-level TTY hackery. Instead, I found this key line:&lt;/p&gt;&lt;pre&gt;fprintf(stderr, "\r%-46.46s", xs-&gt;name);&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;It turns out that the carriage return moves the output cursor back to the beginning of the current line, so further output overwrites whatever was already there. It turns out, too, that this works from Python on both Unix and Windows:&lt;br /&gt;&lt;/p&gt;&lt;pre&gt;&gt;&gt;&gt; print "foo\rbar"&lt;br /&gt;bar&lt;br /&gt;&lt;/pre&gt;&lt;p&gt;Yay!&lt;/p&gt;&lt;p&gt;This makes sense if you think about where the term "carriage return" comes from, and it also makes sense out of why Windows includes it as part of its EOL indicator. I have a typewriter at home, and I've been using it lately to type invoices for the little bit of consulting that I still do. The bar on my typewriter that ends a line actually &lt;i&gt;does&lt;/i&gt; perform two functions: first it scrolls the paper up—newline, \n. Then if you keep pushing the bar, it moves the carriage (the roller assembly that holds the paper) back to the right until you hit your first tab stop—carriage return, \r. So on my typewriter the EOL sequence is \n\r, but apparently on &lt;a href="http://www.oualline.com/eol.html"&gt;teletypes the order was reversed&lt;/a&gt;. And I actually do perform a \n without a \r sometimes, like when I'm lining up columns on an invoice. I can do a \r without a \n too, but that's a different knob.&lt;/p&gt;&lt;p&gt;Unlike so many Unix conventions that are the result of ossified traditions from more innocent times, it appears that the single-character EOL is actually an innovation. It's fun to know your roots.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-3590371759556102549?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/3590371759556102549/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=3590371759556102549' title='14 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3590371759556102549'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3590371759556102549'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/11/use-for-carriage-return.html' title='A use for the carriage return'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>14</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-3829405141470176687</id><published>2008-09-03T22:08:00.006-04:00</published><updated>2011-04-10T09:52:45.092-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Google Chrome: Stability is a win, but where is Python?</title><content type='html'>With its &lt;a href="http://www.google.com/chrome/"&gt;new web browser&lt;/a&gt;, Google aims to deliver simplicity, stability, and speed. The UI &lt;span class="Apple-style-span" style="font-style: italic;"&gt;is&lt;/span&gt; nice and simple, but only marginally so over my usual Firefox setup. And the speed of the new JavaScript engine won't matter until people can build sites for it, and you've got the lowest common denominator problem there. Stability is the biggest immediate win. Yes, there are bugs:&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src="http://static.whit537.org/2008/chrome-crash.png" /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now, if IE or Firefox present such a dialog, I know with the certainty of long habituation that  clicking "OK" means saying good-bye to all of my open tabs. I usually observe a moment of silence before proceeding. It helps the healing process. But guess what happens when I click "OK" on the above dialog? Nothing. The dead tab is already closed, and Chrome doesn't skip a beat. I keep on browsing. Applying my applications. No mourning, no grief. Blip ... barely. &lt;span class="Apple-style-span" style="font-style: italic;"&gt;That&lt;/span&gt; is nice.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;You know what it took to turn "OK, please kill my productivity" into "OK, please stop interrupting me"? It took an entire bottom-up rewrite. That's a lot of work to make my life a little bit easier. I'm glad Google did that.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now, I would be really paranoid about privacy if it weren't &lt;a href="http://code.google.com/chromium/"&gt;open source&lt;/a&gt;, and I'm still tempted to compile it myself (tip: delete &lt;a href="http://src.chromium.org/svn/branches/official/build_149.27/src/chrome/browser/rlz/rlz.h"&gt;rzl.dll&lt;/a&gt;). But I'll be &lt;span class="Apple-style-span" style="font-style: italic;"&gt;really&lt;/span&gt; happy when they add a Python virtual machine. Their &lt;a href="http://code.google.com/appengine/"&gt;server-side offering&lt;/a&gt; is Python-based. Firefox has toyed with the idea (right?), and Microsoft has &lt;a href="http://www.codeplex.com/Wiki/View.aspx?ProjectName=IronPython"&gt;an implementation&lt;/a&gt;. Hey, it could happen.&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-3829405141470176687?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/3829405141470176687/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=3829405141470176687' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3829405141470176687'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/3829405141470176687'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/09/google-chrome-stability-is-win-but.html' title='Google Chrome: Stability is a win, but where is Python?'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-8291511985002122814</id><published>2008-05-29T09:34:00.005-04:00</published><updated>2011-04-10T09:52:45.116-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>First desktop app: transfer gremlin</title><content type='html'>I wrote my first desktop app, called &lt;span style="font-style: italic;"&gt;The ADP/ACS Transfer Gremlin&lt;/span&gt;&lt;span&gt; (ADPGremlin)&lt;/span&gt;. It is a little GUI automation script for transferring data from a spreadsheet we get from &lt;a href="http://www.adp.com/"&gt;ADP&lt;/a&gt; to a screen on our back-office system, &lt;a href="http://www.acstechnologies.com/"&gt;ACS&lt;/a&gt; (which has pretty dismal integration options). Screenshot:&lt;br /&gt;&lt;br /&gt;&lt;img src="http://static.whit537.org/2008/ADPGremlin.gif" alt="The ugly duckling" /&gt;&lt;br /&gt;&lt;br /&gt;Here are the modules used:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://python.net/crew/mhammond/win32/Downloads.html"&gt;pywin32&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;win32clipboard—for prepping text to be pasted&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;win32gui—for switching windows&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;a href="http://www.rutherfurd.net/python/sendkeys/"&gt;SendKeys&lt;/a&gt;—for sending keystrokes to the active window. (&lt;a href="http://blag.whit537.org/2007/10/sendkeys-is-fantastic.html"&gt;I like this module.&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.wxpython.org/"&gt;wxPython&lt;/a&gt;—for building the GUI&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.lexicon.net/sjmachin/xlrd.htm"&gt;xlrd&lt;/a&gt;—for reading Excel files&lt;/li&gt;&lt;/ul&gt;It is packaged with &lt;a href="http://www.py2exe.org/"&gt;py2exe&lt;/a&gt; as a &lt;a href="http://www.py2exe.org/index.cgi/SingleFileExecutable"&gt;single-file executable&lt;/a&gt;, and has a &lt;a href="http://www.py2exe.org/index.cgi/CustomIcons"&gt;custom icon&lt;/a&gt; both in Windows Explorer and the window itself. &lt;a href="http://www.acn-us.org/svn/geeks/ADPGremlin/trunk/"&gt;Source code&lt;/a&gt; is available.&lt;br /&gt;&lt;br /&gt;ADPGremlin should save our accountant about an hour each time he uses it. It took me about 10 hours to write, so it should pay for itself time-wise in about 5 months. Most of the time was spent learning wxPython (and it's still pretty ugly). The only real gotcha learned is that you have to remember to use &lt;a href="http://docs.python.org/lib/built-in-funcs.html#l2h-54"&gt;the 'b' modes&lt;/a&gt; when reading/writing files on Windows.&lt;br /&gt;&lt;br /&gt;Bigger picture: I've had it in the back of my head to write a user-friendly GUI for Aspen, and now I know how to do it.&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-8291511985002122814?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/8291511985002122814/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=8291511985002122814' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/8291511985002122814'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/8291511985002122814'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/05/first-desktop-app-transfer-gremlin.html' title='First desktop app: transfer gremlin'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-2049053418123512195</id><published>2008-04-30T08:09:00.005-04:00</published><updated>2011-04-10T09:52:45.121-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gheat'/><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Gheat 0.2: Pygame, pretty colors</title><content type='html'>A couple weeks ago I asked for suggestions on &lt;a href="http://blag.whit537.org/2008/04/scaling-gheat.html"&gt;how to scale Gheat&lt;/a&gt;, and Rene Dudfield offered that &lt;a href="http://blag.whit537.org/2008/04/scaling-gheat.html?showComment=1208220840000#c6501984810657205010"&gt;Pygame would probably be faster&lt;/a&gt; than PIL. He was right! In &lt;a href="http://code.google.com/p/gheat/"&gt;Gheat version 0.2&lt;/a&gt; I've added a Pygame backend, which is indeed three or four times faster then the PIL backend—thanks, Rene!&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;&lt;/span&gt;Also new in this release:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/"&gt;Documentation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/configuration.html"&gt;Configuration options&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/configuration.html#SECTION003200000000000000000"&gt;Custom color schemes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.zetadev.com/software/gheat/0.2/__/doc/html/configuration.html#SECTION003100000000000000000"&gt;Per-pixel transparencies&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://code.google.com/p/gheat/issues/list?can=1&amp;amp;q=%22in+0.2%22"&gt;Bug-fixes&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;Here's a little promo:&lt;br /&gt;&lt;br /&gt;&lt;object height="323" width="512"&gt;&lt;param name="movie" value="http://d.yimg.com/static.video.yahoo.com/yep/YV_YEP.swf?ver=2.1.14"&gt;&lt;param name="allowFullScreen" value="true"&gt;&lt;param name="flashVars" value="id=7618121&amp;amp;vid=2493505&amp;amp;lang=en-us&amp;amp;intl=us&amp;amp;thumbUrl="&gt;&lt;embed src="http://d.yimg.com/static.video.yahoo.com/yep/YV_YEP.swf?ver=2.1.14" type="application/x-shockwave-flash" allowfullscreen="true" flashvars="id=7618121&amp;amp;vid=2493505&amp;amp;lang=en-us&amp;amp;intl=us&amp;amp;thumbUrl=" height="323" width="512"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;br /&gt;&lt;span style="font-size:78%;"&gt;(YouTube unsynced the audio and video, hence, Yahoo!)&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style="font-weight: bold;"&gt;Homepage:&lt;/span&gt; &lt;a href="http://code.google.com/p/gheat/"&gt;http://code.google.com/p/gheat/&lt;/a&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-2049053418123512195?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/2049053418123512195/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=2049053418123512195' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/2049053418123512195'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/2049053418123512195'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/04/gheat-02-pygame-pretty-colors.html' title='Gheat 0.2: Pygame, pretty colors'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-711660154966939568</id><published>2008-04-14T10:53:00.005-04:00</published><updated>2011-04-10T09:52:45.132-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gheat'/><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Scaling gheat</title><content type='html'>&lt;p&gt;I gave a lightening talk on &lt;a href="http://code.google.com/p/gheat/"&gt;gheat&lt;/a&gt; at &lt;a href="http://devhousepgh.org/"&gt;DevHouse Pittsburgh&lt;/a&gt; last Thursday. DevHouse was a good time, and it worked! I met &lt;a href="http://www.gierard.com/"&gt;Isaac&lt;/a&gt; and we had a good conversation about how to scale gheat.&lt;/p&gt;&lt;p&gt;Heatmaps are expensive to generate, which makes them infeasible for applications approaching anything like real time. Most of the cost is in the multiply operation (see &lt;a href="http://gheat.googlecode.com/svn/tags/0.1/__/lib/python/gheat.py"&gt;the source&lt;/a&gt;). This operation is already written in C (it's part of PIL), so what else could we do to optimize this?&lt;/p&gt;&lt;p&gt;We came up with two ideas. First, we could parallelize it. Split up tiles even further, generate mini-heatmaps, and then knit them back together. This is basically carrying Google's tiling strategy even further. You'd have to distribute the parallelization over a number of CPUs to make it worthwhile. And since points just off the edge of a tile affect the tile itself, you end up with this overlap area where you are really doing double work. The smaller the tiles, the larger the overlap. At maximum parallelization you are doing fully twice the work.&lt;/p&gt;&lt;p&gt;The other idea was to reduce the dot resolution. Perhaps multiplying 100 dots looks about the same as multiplying only 10 well-placed dots. And probably, finding those 10 dots is cheaper than multiplying all 100. To make this work, you would need to calibrate your dot resolution to the zoom level. You would also need to normalize across all your data so the heatmap meant the same thing everywhere. For this reason, local changes could potentially ripple out to affect the entire dataset, which would hurt caching (our current optimization strategy). As always, optimizations are not without trade-offs.&lt;/p&gt;&lt;p&gt;Wouldn't it be neat to have real-time heatmaps?&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-711660154966939568?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/711660154966939568/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=711660154966939568' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/711660154966939568'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/711660154966939568'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/04/scaling-gheat.html' title='Scaling gheat'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5812044877177032570</id><published>2008-04-10T15:01:00.019-04:00</published><updated>2011-04-10T09:52:45.136-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='django'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Simplates, biblical Greek on Google App Engine</title><content type='html'>I scored a preview account on &lt;a href="http://appengine.google.com/"&gt;Google App Engine&lt;/a&gt; (GAE). Before I say anything else, let me say  congratulations to the team at Google that pulled this off. THIS IS UNQUESTIONABLY REALLY FREAKING AWESOME. The rest of us can now write programs for The Google. In Python. WOW. Nothing I say below should detract from that baseline awesomeness.&lt;br /&gt;&lt;br /&gt;So after getting "Greetings, program!" to work, I looked at porting &lt;a href="http://code.google.com/p/gheat/"&gt;gheat&lt;/a&gt; from Aspen to GAE. Unfortunately, the Python library available doesn't include PIL, so that was a quick dead end. I'm sure they will add PIL and other common third-party C extensions eventually. And lest you think I'm disappointed, remember: I AM WRITING A PROGRAM TO BE RUN ON THE GOOGLE. AND I'VE GOT ALMOST THE ENTIRE FREAKING STANDARD LIBRARY.&lt;br /&gt;&lt;br /&gt;So I decided instead to port a text-based project, which I'm calling "Bibligon" (it was previously called Textus but that name is taken on Google; the error message indicates that app engine apps actually share a namespace with Google accounts). &lt;a href="http://bibligon.appspot.com/"&gt;Bibligon&lt;/a&gt; is a hack I did while taking a biblical Greek class last spring. It's a way to annotate a fixed text down to the character level. The original was written using &lt;a href="http://www.zetadev.com/software/aspen/0.8/doc/html/api-handlers-simplates.html"&gt;Django simplates&lt;/a&gt;, served by &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt;. GAE bundles Django(!), and Bibligon is an app that would grow lots of data quickly if it were actually used, so it seems like a good fit.&lt;br /&gt;&lt;br /&gt;Porting Bibligon to GAE makes me appreciate all over again why I wrote &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen&lt;/a&gt; and Simplates in the first place. For example, GAE's filesystem layout is nasty. You've got scripts that depend on Python modules being in a certain location relative to them. You've got nested Python paths. You've got Python files and static files and template files and configuration files and framework files and user files all jumbled together willy-nilly. Why not use something like &lt;a href="http://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt; to keep it all straight? (Caveat emptor: I AM PORTING MY APPLICATION TO THE GOOGLE. THIS IS UNREMITTINGLY AWESOME.)&lt;br /&gt;&lt;br /&gt;I also found the development server annoying. A couple of issues were peculiar to my setup. I develop on FreeBSD from Windows via VMWare. Due to &lt;a href="http://blag.whit537.org/2007/05/flaky-network-on-freebsd-62-under.html"&gt;a bug in VMWare&lt;/a&gt;, the connection hangs every so often, and I have to restart the network interface on FreeBSD. With Aspen, I just refresh the page I am working on and it immediately clears the now-dead socket. GAE uses BaseHTTPServer, though, and I have to go kill and restart the server process before I can connect again. It's probably a socket timeout setting or something. Another quirk of this setup is that I can't just bind to localhost because I'm not hitting the server from localhost. I have to bind to the server's external address. Aspen does this by default if no address is specified, but not so BaseHTTPServer. Not a big deal, as there is a command-line switch. (AND DID I MENTION THAT I'M DEVELOPING APPS FOR THE GOOGLE? IN PYTHON?)&lt;br /&gt;&lt;br /&gt;A few other dev server warts are more general. Even though GAE supports WSGI, requests are more or less wrapped in CGI. This means that anything you print shows up in the browser, before the response headers. You have to use the logging module to see things in the console. That's not so bad because you really do want to use logging anyway to take advantage of the GAE dashboard's log browsing interface. But this also breaks PDB; &lt;span style="font-family:courier new;"&gt;set_trace()&lt;/span&gt; just gives you BDBQuit in the browser. Moreover, they decided to use cgitb to display tracebacks, which means you have to scroll through tons of undifferentiated purple to see the actual error, which is at the bottom of the page. I also have to hit F5 twice to reload a page, but this could be related to my setup. I haven't yet done all the digging I could on these issues, and besides that, I HAVE A LOCAL COPY OF THE GOOGLE RUNNING ON MY LOCAL MACHINE, LOCALLY SERVING THE APPLICATION I AM LOCALLY DEVELOPING FOR DEPLOYMENT ON THE GOOGLE.&lt;br /&gt;&lt;br /&gt;YAML was a good choice for configuration. It's not too dissimilar from &lt;a href="http://www.zetadev.com/software/aspen/0.8/doc/html/handlers-conf.html"&gt;the handlers syntax&lt;/a&gt; in Aspen, and it's a standard. I would like to see a published API for accessing this configuration from my programs, though. (NOTE: I AM CONFIGURING PROGRAMS TO RUN ON THE GOOGLE.)&lt;br /&gt;&lt;br /&gt;So my first impression? Google App Engine is kind of ugly. BUT THIS UGLINESS IS VASTLY OVERSHADOWED BY THE INCREDIBLE COOLNESS OF WHAT YOU ARE DOING—RUNNING PYTHON APPS ON THE GOOGLE—AND THE SHEER IMPRESSIVENESS THAT THEY PULLED THIS THING OFF AT ALL.&lt;br /&gt;&lt;br /&gt;As far as actual code goes, I did get Simplates working. Since GAE bundles Django, I just had to add a &lt;span style="font-family:courier new;"&gt;main()&lt;/span&gt; function to &lt;a href="http://aspen.googlecode.com/svn/trunk/lib/python/aspen/handlers/simplates/django_.py"&gt;the Django simplates module&lt;/a&gt; in order for it to be usable as a GAE  handler script. I also tweaked the subpackage so it can be used apart from the rest of Aspen. If you want to play with it, svn checkout &lt;a href="http://aspen.googlecode.com/svn/trunk/lib/python/aspen/handlers/simplates/"&gt;the simplates subpackage&lt;/a&gt; into your GAE project directory, and use 'simplates/django_.py' as your &lt;a href="http://code.google.com/appengine/docs/configuringanapp.html#Script_Handlers"&gt;script handler&lt;/a&gt;. You'll also have to wire up Django and use a couple names that are hardcoded for now. Use the source and let me know if you want some pointers. (NB: THE POINTERS WILL BE FOR LOADING AND RUNNING DJANGO SIMPLATES ON THE GOOGLE.)&lt;br /&gt;&lt;br /&gt;So with Simplates working, I'm ready to start on actually porting &lt;a href="http://bibligon.appspot.com/"&gt;Bibligon&lt;/a&gt;. The Django and GAE data models are similar, and in addition to getting static files and simplates working, I've got my first piece of data posted. I should be able to get the whole thing ported in about a day. But unfortunately today is not that day. April 15 is looming large over someone who hasn't entered anything into QuickBooks for over a year. :^(&lt;br /&gt;&lt;br /&gt;P.S. A QUICKBOOKS KILLER COULD POTENTIALLY BE WRITTEN AS AN APPLICATION RUNNING ON THE GOOGLE. YOU OR I COULD WRITE THIS APPLICATION, THE APPLICATION RUNNING ON THE GOOGLE, KILLING QUICKBOOKS.&lt;br /&gt;&lt;br /&gt;P.P.S. And of course, the corporate techno-beast tightens its stranglehold on civilization, but waddya want?&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-5812044877177032570?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/5812044877177032570/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=5812044877177032570' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5812044877177032570'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5812044877177032570'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/04/simplates-biblical-greek-on-google-app.html' title='Simplates, biblical Greek on Google App Engine'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-8487684755312283860</id><published>2008-01-28T22:18:00.002-05:00</published><updated>2011-04-10T09:52:45.178-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='gheat'/><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>gheat: a Python heatmap for Google Maps</title><content type='html'>&lt;p&gt;&lt;a href="http://code.google.com/p/gheat/"&gt;&lt;img src="http://static.whit537.org/2007/heatmap.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;br /&gt;&lt;p&gt;Last summer I &lt;a href="http://blag.whit537.org/2007/07/heatmap-for-google-maps.html"&gt;rolled out&lt;/a&gt; a heatmap tile layer for Google Maps, and I mentioned the possibility of open-sourcing it. I've gotten five requests since then, the latest coming yesterday. So, without further ado, I present to you: &lt;a href="http://code.google.com/p/gheat/"&gt;gheat&lt;/a&gt;. Sorry for not getting it out sooner.&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-8487684755312283860?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/8487684755312283860/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=8487684755312283860' title='4 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/8487684755312283860'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/8487684755312283860'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2008/01/gheat-python-heatmap-for-google-maps.html' title='gheat: a Python heatmap for Google Maps'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>4</thr:total></entry><entry><id>tag:blogger.com,1999:blog-36506138.post-5317362247458580959</id><published>2007-12-24T00:22:00.000-05:00</published><updated>2011-04-10T09:52:45.181-04:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='fb'/><category scheme='http://www.blogger.com/atom/ns#' term='aspen'/><category scheme='http://www.blogger.com/atom/ns#' term='tech'/><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Aspen 0.8: Meet simplates</title><content type='html'>Today I released &lt;a href="http://www.zetadev.com/software/aspen/"&gt;Aspen version 0.8&lt;/a&gt;. The big new feature is called &lt;a href="http://www.zetadev.com/software/aspen/0.8/doc/html/api-handlers-simplates.html"&gt;&lt;span style="font-style: italic;"&gt;simplates&lt;/span&gt;&lt;/a&gt;. Here's the announcement:&lt;br /&gt;&lt;object height="350" width="425"&gt;&lt;br /&gt;&lt;param name="movie" value="http://www.youtube.com/v/Slk95WWL138"&gt;&lt;br /&gt;&lt;embed src="http://www.youtube.com/v/Slk95WWL138" type="application/x-shockwave-flash" height="350" width="425"&gt;&lt;/embed&gt;&lt;br /&gt;&lt;/object&gt;&lt;br /&gt;And here are &lt;a href="http://www.zetadev.com/software/aspen/"&gt;all the goodies&lt;/a&gt;.&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-5317362247458580959?l=blag.whit537.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blag.whit537.org/feeds/5317362247458580959/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment.g?blogID=36506138&amp;postID=5317362247458580959' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5317362247458580959'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/36506138/posts/default/5317362247458580959'/><link rel='alternate' type='text/html' href='http://blag.whit537.org/2007/12/aspen-08-meet-simplates.html' title='Aspen 0.8: Meet simplates'/><author><name>whit537</name><uri>http://www.blogger.com/profile/05060120882054416919</uri><email>noreply@blogger.com</email></author><thr:total>0</thr:total></entry></feed>
