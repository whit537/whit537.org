title = "FreeBSD threads, Apache, and mod_wsgi"
published = "2007-07-09T14:11:00.001-04:00"
updated = "2011-04-10T09:52:45.282-04:00"
[---]
[---] text/html
{% extends "base.html" %}
{% block content %}
<p>I'm evaluating <a href="http://code.google.com/p/modwsgi/">mod_wsgi</a>, and my usual server environment is FreeBSD 6. Unfortunately, FreeBSD has gained a bad reputation for supporting Apache's thread-based <a style="font-style: italic;" href="http://httpd.apache.org/docs/2.0/mod/worker.html">worker</a> MPM  (more modern than the process-based <a href="http://httpd.apache.org/docs/2.0/mod/prefork.html"><span style="font-style: italic;">prefork</span></a> MPM). I <a href="http://www.modpython.org/pipermail/mod_python/2006-September/021984.html">wrestled with this last fall</a> when I was evaluating mod_python. Now I'm wrestling with it again, because one needs a threaded Apache in order to take advantage of mod_wsgi's daemon mode.</p><p>The complications begin with <a href="http://lurker.clamav.net/message/20070311.104344.ac2ec049.en.html">FreeBSD's three threading implementations</a>:<br /><ul><li><span style="font-weight: bold;">libc_r:</span> a userland threading library, all threads are library intern and it can't use multiple CPUs. </li><li><span style="font-weight: bold;">libthr:</span> a 1:1 kernel threading library. </li><li><span style="font-weight: bold;">libpthread:</span> a n:m kernel threading library.</li></ul>(Here's <a href="http://kerneltrap.org/node/624">a much more detailed discussion</a>.)</p><p>Now, I found two actual data points last fall to scare me off from a threaded Apache on FreeBSD:</p><br /><ul><li>"Apache starts eating 100% of the CPU and not answering queries." [<a href="http://archives.seul.org/or/dev/Sep-2003/msg00016.html">source</a>]</li><li>"I see a lot of stuck http gets in /server-status listing." [<a href="http://lists.freebsd.org/pipermail/freebsd-apache/2005-November/000404.html">source</a>]<br /></li></ul><p>The first is from September 2003, <a href="http://www.freebsd.org/kse/">before libpthread had landed</a>, and the claim that "FreeBSD threads suck. Bigtime" probably refers to the older libc_r library. The second instance is under Apache 2.0/FreeBSD 6.0, but it doesn't definitively address the case of <a href="http://ivoras.sharanet.org/freebsd/gotchas.html">mixed threading libraries</a>: with an empty <a href="http://www.freebsd.org/cgi/man.cgi?query=libmap.conf">libmap.conf</a>, one could end up with an <span style="font-family:courier new;">httpd</span> linked against libpthread loading modules linked against libraries that are linked against libc_r or libthr (right?). Given these question marks, I'm giving threaded Apache on FreeBSD another shot for the sake of a full-featured mod_wsgi.</p><p>After getting mod_wsgi to compile, I saw Apache die silently after loading mod_wsgi. However, it looks like the problem is that <a href="http://mail-archives.apache.org/mod_mbox/httpd-python-dev/200509.mbox/%3c20050912121753.W62057@grisha.dyndns.org%3e">the envvars trick to force Apache to "acquire threadedness"</a> is now <a href="http://groups.google.com/group/modwsgi/browse_frm/thread/df52123ce28bfc97/">coming back to haunt me</a>. If you're using libpthread with Apache, then you <span style="font-style: italic;">don't</span> want another threading library linked via envvars, or really at all: I'm not going to touch libmap.conf for now, but if I see more problems, the first thing I'll try is overriding any use of libc_r with libpthread in libmap.conf. After that, I'll probably take future problems to the <a href="http://lists.freebsd.org/mailman/listinfo/freebsd-apache">freebsd-apache</a> and <a href="http://lists.freebsd.org/mailman/listinfo/freebsd-threads">freebsd-threads</a> lists. For now, though, I have mod_wsgi working with a threaded Apache 2.0, and that's enough for today.</p><div class="blogger-post-footer"><img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/36506138-4471996614119724272?l=blag.whit537.org' alt='' /></div>
{% endblock %}
